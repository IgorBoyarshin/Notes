ZIP archive {keywords: zip, Zip}
To compress:
:> zip archive.zip file1 file2 file3
or to zip a directory
:> zip -r archive.zip dir1
To uncompress:
:> unzip archive.zip
To uncompress into given path:
:> unzip archive.zip -d ~/folder_to_put_into


Unarchive RAR with unrar {keywords: rar, Rar, unrar}
To unarchive:
:> unrar x <name>
To list:
:> unrar l <name>


Sort yaourt packages based on their rating
:> yaourt -Ss package --sort w


Powerdown
[-P(default) == powerdown, -r == reboot]
:> shutdown -P +60 [min]
:> shutdown -P 1:00 [1 AM]
:> shutdown -P now
:> shutdown -c [cancel]


Brightness
[sys/class/backlight/intel_backlight]
max_brightness - const, max possible value
actual_brightness - readonly, current value(watches the 'brightness' file)
brightness - set by user, current value
:> sudo chmod a+w /sys/class/backlight/intel_backlight/brightness
:> echo "1000" > /sys/class/backlight/intel_backlight/brightness


Search the filesystem
:> grep -rnw 'PATH' -e 'PATTERN'
-R === traverse the whole tree, follow symlinks
-r === traverse the whole tree, dont' follow symlinks
-n === show line numbers
-w === match the whole word
-l === don't show the matches, just file names
--include=\*.{c,h}
--exclude=*.o
--exclude-dir={dir1,dir2,*.dst}


Default copy
:> cp -a source/. dest/
The -a option is an improved recursive option, that preserve all file attributes, and also preserve symlinks.
The . at end of the source path is a specific cp syntax that allow to copy all files and folders, included hidden ones.


Copy comparison
- Using cp(the following two are equivalent):
:> cp -a source/. dest/source
:> cp -a source dest
- Using rsync(the following two are equivalent):
:> rsync -avh --progress source/ dest/source
:> rsync -avh --progress source dest


Execute visual stuff with sudo(as root)
:> xhost +local:


To run (n)vim as sudo and properly load the .vimrc
:> sudo -E nvim ...


List devices, partitions
:> lsblk


When errors arise from yaourt due to gpg(pgp) check fail
:> yaourt --m-arg --skipchecksums --m-arg --skippgpcheck -Sb <package>
For trizen:
:> trizen --skipinteg <operations>
(https://github.com/trizen/trizen)
:> trizen --noconfirm


For ext4 format, in fstab, don't set uid and gid(it even won't allow you),
set them through directory parameters(chmod, chown)


To mount an SD card
:> mount -t vfat /dev/mmcblk0p1 /mount/path


Additional format types
VFAT(vfat), MSDOS(msdos):
:> pacman -S dosfstools
NTFS(ntfs):
:> pacman -S ntfsprogs


Create a bootable usb(or just transfer an iso to a usb) with dd:
:> sudo dd bs=4M if=/home/igorek/file.iso of=/dev/sdb status=progress oflag=sync


Font
In order to add new fonts:
1) place the folder containing a font family inside
    [/usr/share/fonts] === for all users
    [/.local/share/fonts] === for current user
    Make sure the folder and files in it can be read by everybody.
2) Make the system search for fonts in that location
    (Note: the name of the file doesn't matter, just make it {digit}{digit}-*.conf).
    [/etc/X11/xorg.conf.d/10-fonts.conf]
    "
        # Let X.Org know about the custom font directories
        Section "Files"
            FontPath    "/usr/share/fonts/100dpi"
            FontPath    "/usr/share/fonts/75dpi"
            FontPath    "/usr/share/fonts/consolas-powerline"
            FontPath    "/usr/share/fonts/cantarell"
            FontPath    "/usr/share/fonts/cyrillic"
            FontPath    "/usr/share/fonts/encodings"
            FontPath    "/usr/share/fonts/gsfonts"
            FontPath    "/usr/share/fonts/Inconsolata"
            FontPath    "/usr/share/fonts/FiraCode"
            FontPath    "/usr/share/fonts/SourceCodePro"
            FontPath    "/usr/share/fonts/InconsolataGo"
            FontPath    "/usr/share/fonts/misc"
            FontPath    "/usr/share/fonts/Mononoki"
            FontPath    "/usr/share/fonts/OTF"
            FontPath    "/usr/share/fonts/TTF"
            FontPath    "/usr/share/fonts/Type1"
            FontPath    "/usr/share/fonts/util"
        EndSection
    "
(Note: the contents of the file must correspond to dirs in the "fonts" folder).
3) Update the font cache(most likely an unnecessary step)
    :> fc-cache
4) Find out the name of the font
    :> fc-list
    (Note: output to a file and do a search)
5) In .Xresources set the font by its name
6) Reload .Xresources
    :> xrdb ~/.Xresources


PowerTop custom service at:
/etc/systemd/system/powertop-custom.service
Script at:
/usr/local/sbin/powertop-custom.sh


About default target(Display manager related):
https://bbs.archlinux.org/viewtopic.php?id=215694


Mounting options, permissions table
    0   1   2   3   4   5   6   7
r   +   +   +   +   -   -   -   -
w   +   +   -   -   +   +   -   -
x   +   -   +   -   +   -   +   -
(owner, group, other)
umask - everything
dmask - directories
fmask - files


Timestamps
atime - access time
ctime - change time (+attributes)
mtime - modification time(-attributes)


Mounting external USB
1) :> mkdir /mnt/External
2) make yourself(and your group) the owner with chown
3) allow all permissions with chmod
4) when mounting, use smth like(specify both uid and gid):
:> sudo mount -o uid=igorek,gid=users,fmask=111,dmask=000 /dev/sdb1 /mnt/External


Stack install with flag example
:> stack install --flag xmobar:with_xft xmobar


Info about keybindings:
:> loadkeys
:> showkey


Pipes
Create:
:> mkfifo <name>
Remove:
:> rm <name>


Execute an action on file change
(<name> - file ame to watch. <action> - command-line action to perform)
:> pacman -S inotify-tools
:> while [[ 1 ]]; do inotifywait -e modify <name>; <action>; done


Create a symbolic link(symlink)
:> ln -s -T TARGET LINK_NAME


Find and connect to a new Wifi
(Note: After system installation: disable dhcpcd and netctl, enable NetworkManager)
Search:
:> nmcli device wifi
Connect:
:> nmcli device wifi connect <SSID> password <PASSWORD>


Git credentials
At home location:
:> git config --global credential.helper store
At the next promt git will remember the credentials and store them in the home folder


URXVT image preview support
The image preview methods urxvt and urxvt_full can be used with the urxvt terminal and are typically more reliable. They use a special escape sequence to change the background of the terminal in order to render the image.
Steps:
* Run urxvt with pixbuf support (some operating systems ship it without pixbuf support, but for example ArchLinux has an AUR package called rxvt-unicode-pixbuf which should work)
* Add the line set preview_images true to your ~/.config/ranger/rc.conf.
* Add the line set preview_images_method urxvt to your ~/.config/ranger/rc.conf. You can also choose urxvt-full if you would like the image to fill the whole terminal rather than just the preview pane.
* Restart ranger


Reload resources
:> xrdb ~/.Xresources
(for example, to reload XMobar settings in real time)


Startup script for LightDM
LightDM has a script /etc/lightdm/lightdm/Xsession which(at the end) calls a
user-defined script ~/.xsession


Keyboard speed {keywords: keyboard}
:> pacman -S xorg-xset
Temporary(not recommended, as it may be reset sometimes by something):
:> xset r rate 200 40
Permanently [~/.xserverrc]:
exec /usr/bin/Xorg -nolisten tcp -ardelay 250 -arinterval 25 "$@" vt$XDG_VTNR
(Note: The second argument, namely 25, uses delay, whereas xset uses frequency.
So, for example, xset r rate 250 40 === ... -ardelay 250 -arinterval 25
(because 1/25ms = 40Hz).)


Language
Temporary:
setxkbmap -model pc104 -layout us,ru -variant , -option grp:alt_shift_toggle
Permanently:
localectl --no-convert set-x11-keymap us,ru pc104 , grp:alt_shift_toggle


Wallpaper
Into .xsession:
:> feh --bg-center <path-to-wallpaper>


Console battery status check:
:> acpi -i


Generate assembly code with gcc
:> gcc source.c -O0 -masm=intel -S -o source.s


For Agnoster theme for zsh, to remove the hostname:
In *_context function, change the following to:
prompt_segment black default "%(!.%{%F{yellow}%}.)$USER"


Install Plug for neovim
Investigate:
Need to put plug.vim(located in ~/.local/share/nvim/site/autoload) into ~/.vim/autoload
(At least needed for ranger to open files correctly)


Add dotfiles/.vim/snippets into ~/.vim


Altera Quartus start command
:> /opt/altera/quartus/bin/quartus --64bit


Possible fix if xclip stops working, complaining about a missing DISPLAY:
Remove(backup) the .Xauthority file at home. At the next start a new one(fixed?) will be generated. And at the one more consequent start everything will work.


Git, list all untracket files
:> git status -u


In order to make grub discover Windows {keywords: Grub, dual boot, windows}
Install os-prober. Nothing else required. On the next grub-mkconfig it should
find and add menuentry for windows.


MIME types list for extensions
https://en.wikipedia.org/wiki/Media_type
~/.config/mimeapps.list


Xmonad
Recompile:
:> xmonad --recompile
Close current focused window:
:> mod+shift+c
Increment/decrement amount of windows in the master area
:> mod+,/.


Print character by its code
:> echo $'\ue621'


To find the class name of an application(click on thr app)
:> xprop | grep WM_CLASS


Get info about OS(operating system), kernel version etc
:> uname -a


Get ip addresses, devices etc
:> ifconfig
OR(newer):
:> ip addr show [DEVICE]


Get disk space(used, left etc) [storage, memory]
:> df -ah

Get folder (directory) size [storage, memory]
:> du -sh


Get cumulative size of a dir
:> du -sh <PATH>


To temporarily give more space for /tmp folder
:> sudo mount -o remount,size=4G,noatime /tmp


Get info about opened ports, listeting services etc
(sudo to see PID/program name)
:> sudo netstat -tulpn


Get CPU(processor) usage of a particular process
:> ps aux | grep <NAME>


Get existing mounts
:> mount


Libreoffice launch agruments
--version       Displays the version information.
--writer        Starts with an empty Writer document.
--calc          Starts with an empty Calc document.
--draw          Starts with an empty Draw document.
--impress       Starts with an empty Impress document.
--math          Starts with an empty Math document.


Get binary number representation with Haskell
ghci:> import Text.Printf
ghci:> let a = 5207 in putStrLn $ printf "%d = %b" a a


Xmonad recompilation at startup problem
(Assumes you use stack to install xmonad and xmobar)
There's a 'build' file in .xmonad.
Rename it to whatever.
Otherwise(why???) it is executed at each startup(not xorg restart!), thus
forcing a (partial??) recompilation.


To downgrade a package with pacman
:> pacman -U https://archive.archlinux.org/packages/p/physfs/physfs-2.0.3-3-x86_64.pkg.tar.xz
Find out the package name from here:
https://archive.archlinux.org/packages/p/physfs/


Possible fix for printer with an udev rule
KERNEL=="lp[0-9]", SYMLINK+="%k", GROUP="lp"


If the clock got set wrongly because of windows, in order to revert it(from archwiki Time)
:> timedatectl set-local-rtc 0


Format
:> mkfs.ntfs /dev/sdb1
Quick format:
:> mkfs.ntfs /dev/sdb1 -Q


To turn off cores
(Note: cpu0 can't be turned off)
(Note: "0" - off, "1" - on)
:> sudo echo 0 | sudo tee /sys/devices/system/cpu/cpu1/online


To read man pages with Vim
:> man man | vim -


Xmonad jsut in case
:> cd .xmonad
:> stack ghc xmonad


Display package dependencies in a tree format
:> pactree -s <PACKAGE>


Useful commands
Memory and swap usage
:> free -h
:> cat /proc/meminfo
Display stats with timestamp collumn every 1 second 5 times
:> vmstat -t 1 5
Current loggen in users
:> w

:> find
:> xargs
:> grep
