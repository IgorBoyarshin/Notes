# Be inside the branch you are merging into
git merge feature
git merge feature -m "message"

# To create a new branch and add it to the remote:
git checkout -b newbranch
git push -u origin newbranch

# Delete remote branch
git push origin --delete serverfix

# List remote branches
git ls-remote [remote]

git config --global credential.helper cache
-------------------------------------------------------------------------------
Fix wrong commit message
:> git commit --amend


Undo commit
:> git reset HEAD~
:> ...
:> git commit -c ORIG_HEAD


Reser (revert) to commit
:> git reset --hard HEAD


git log --oneline --decorate --graph --all
git log --oneline --decorate --graph --all --reflog --pretty=format:"%h %s%d (by %an %cr)"


Clear reflog
git reflog expire --expire-unreachable=now --all
git gc --prune=now
-------------------------------------------------------------------------------
If you want to merge project-a into project-b:

cd path/to/project-b
git remote add project-a path/to/project-a
git fetch project-a --tags
git merge --allow-unrelated-histories project-a/master # or whichever branch you want to merge
git remote remove project-a
-------------------------------------------------------------------------------
git d HEAD^ HEAD
:qa

Using meld:
git difftool --dir-diff old..new
-------------------------------------------------------------------------------
nocheckin pre-commit hook
[.git/hooks/pre-commit]
{
#!/bin/sh

FILES_PATTERN='\.(ts|css|html)(\..+)?$'
FORBIDDEN='nocheckin'
git diff --relative --cached --name-only | \
    grep -E $FILES_PATTERN | \
    GREP_COLOR='4;5;37;41' xargs grep --color --with-filename -n $FORBIDDEN && echo 'COMMIT REJECTED. "nocheckin" comments found. Please remove them before commiting' && exit 1
exit 0
}
