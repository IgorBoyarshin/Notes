================ Check Internet
(Plug in the ethernet cable before booting)
:> ping 8.8.8.8

To setup wifi:
:> wifi-menu

Other:
dhcpcd service
:> wifi-menu -o <Wifi interface name>
================ Make sure the clock is OK
:> timedatectl set-ntp true
================ Partition the disk
======== GPT
:> fdisk -l
:> fdisk /dev/sda

- Boot 200M, Type=1 (EFI System)
- Root ~~, Type=20 (Linux filesystem)
- Swap 16G, Type=19 (Linux swap)
======== MBR
- Boot +200M, Type=...bootable flag (a)
- Swap +16G, Type=...swap flag (82)
- Root ~~, Type=...
======== Common
m === help
p === print partition table
n === add new partition
l === list partition types
t === change partition type
w === write changes
================ Create filesystem
For Root and Home and Boot(if did not exist before):
:> mkfs.ext4 /dev/sda1
================ Prepare swap
:> mkswap /dev/sda1
:> swapon /dev/sda1
================ Mount
Root:
:> mount /dev/sda2 /mnt
Boot:
:> mkdir /mnt/boot
:> mount /dev/sda1 /mnt/boot
================ Install the system
:> pacstrap -i /mnt base base-devel vim ntfs-3g <OTHER PACKAGES>
-i === avoid auto-confirmation of package selection
================ Generate fstab
Mount other partitions that you would like to be present in fstab.
:> genfstab -U -p /mnt >> /mnt/etc/fstab
-U === use UUIDs instead of /dev/sda1
-p === avoid printing pseudofs mounts
================ Enter the new system
:> arch-chroot /mnt
================ Time zone
ln -sf /usr/share/zoneinfo/Europe/Kiev /etc/localtime
hwclock --systohc --utc
================ Locale
:> vim /etc/locale.gen
{
    de_AT.UTF-8 UTF-8
    de_AT ISO-8859-1

    en_US.UTF-8 UTF-8
    en_US ISO-8859-1

    ru_RU.UTF-8 UTF-8
    ru_RU ISO-8859-5

    uk_UA.UTF-8 UTF-8
}

:> locale-gen

:> vim /etc/locale.conf
{
    LANG=en_US.UTF-8
}
================ Install stuff
UEFI:
:> pacman -S grub efibootmgr os-prober intel-ucode wpa_supplicant wireless_tools networkmanager vim git zsh dialog linux linux-headers
BIOS:
:> pacman -S grub-bios os-prober intel-ucode networkmanager wpa_supplicant wireless_tools vim git zsh linux linux-headers
================ Grub
======== UEFI, GPT
/boot is expected to be mounted to the EFI partition.

:> grub-install --target=x86_64-efi --bootloader-id=arch_grub_uefi --efi-directory=/boot --recheck
:> os-prober
:> grub-mkconfig -o /boot/grub/grub.cfg
======== BIOS, MBR
:> grub-install --target=i386-pc --recheck /dev/sda
:> os-prober
:> grub-mkconfig -o /boot/grub/grub.cfg
================ Other
:> mkinitcpio -p linux

TODO
TODO: run mkinitcpio before or after grub-mkconfig??
!!!!!!!!!!! grub-mkconfig must be run after image creation !!!!!!!!!!!!!!!!!
TODO
TODO

======== Set root password
:> passwd

======== Set hostname
:> echo "apollo" > /etc/hostname
================ Enable & disable stuff
!!!! You need NetworkManager even for ethernet connection !!!!
:> systemctl enable NetworkManager
:> systemctl disable dhcpcd
================ Finish
:> exit
:> umount -R /mnt
-R === recursive (so /mnt and all sub-directories)
:> reboot
================ Post install
:> pacman -S xf86-input-libinput mesa xorg-server xorg-xinit

For Nvidia:
:> pacman -S nvidia

:> vim /etc/pacman.conf
Uncomment multilib(2 lines) at the end,
Add {
    [archlinuxfr]
    SigLevel = Never
    Server = http://repo.archlinux.fr/$arch
}

:> visudo
Uncomment wheel
(If complains about missing editor, just do :> EDITOR=vim visudo)

:> useradd -m -G audio,lp,optical,storage,video,wheel,games,power,scanner -s /usr/bin/zsh igorek
:> passwd igorek
