* Lines starting with (*) are comments.
* (#) [pac|aur] <package> === package to install.
* (?) [pac|aur] <package> === potential package, don't install them in the main batch.
* (%) [pac|aur] <package> === archived. Never install. Just remember that they exist.

* -----------------------------------------------------------------------------
* ---------------- Manual
* -----------------------------------------------------------------------------
* [??] ffmpeg
* Convert audio or video files
* :> ffmpeg -i input.mp4 output.webm

* WPS languages
* http://wps-community.org/download/dicts/
* https://askubuntu.com/questions/602352/change-spell-check-language-in-wps-office
* Extract zip, put into .kingsoft/office6/dicts

* PVS-Studio
* # [aur] pvs-studio
* # [pac] strace
* :> no-internet "pvs-studio-analyzer trace -- make"
* :> no-internet "pvs-studio-analyzer analyze"
* :> no-internet "plog-converter -a GA:1,2 -t tasklist ./PVS-Studio.log"


* kdenlive
* lutris

* wpa_supplicant

* ------- NTP
* :> pacman -S ntp
* :> systemctl daemon-reload
* :> systemctl enable ntpd

* After the file - run distribute.zsh.

* Trizen
* :> git clone https://aur.archlinux.org/trizen-git.git
* :> cd trizen-git
* :> makepkg -si

* Oh-My-Zsh
* :> sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
* Source from .zshrc
* Place ~/.dircolors

* For tmux install TMP(plugin manager) from github:
* :> git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
* Inside tmux press `+I (prefix+I) to Install

* Haskell, xmonad, xmobar, ghc
* [
*     Haskell:           https://wiki.archlinux.org/index.php/Haskell
*     Xmonad and Xmobar: http://brianbuccola.com/how-to-install-xmonad-and-xmobar-via-stack/
* ]
* # [aur] stack-static
* (Use: --noconfirm --skipinteg)
    * Another solution, remove if unnesessary:
    * :> trizen -S stack-bin
    * :> stack setup --system-ghc
    * :> stack install --system-ghc cabal-install
* Will create ~/.stack (will download stuff):
* :> stack setup
* Now you can do ":> stack ghc" or ":> stack ghci"
* :> cd ~/.xmonad
* :> git clone "https://github.com/xmonad/xmonad" xmonad-git
* :> git clone "https://github.com/xmonad/xmonad-contrib" xmonad-contrib-git
* :> git clone "https://github.com/jaor/xmobar" xmobar-git
* :> stack init
* :> vim stack.yaml
* {
* ...
* flags:
*     xmobar:
*         all_extensions: true
*         * with_xft: true
* ...
* }
* :> stack install
* if complains, add (it suggests so):
* ...deps: [iwlib-0.1.0]
* And also install from pacman haskell-iwlib
* Check that ~/.local/bin is in $PATH
* :> vim build
* {
* #!/bin/sh
* exec stack ghc -- \
*   --make xmonad.hs \
*   -i \
*   -ilib \
*   -fforce-recomp \
*   -main-is main \
*   -v0 \
*   -o "$1"
* }
* :> chmod a+x build
*
* In order to recompile and restart xmonad:
* :> ~/.xmonad/build
* [WIN+q]
*
* Every time you update (with "git pull") the three downloaded repositories:
* :> stack install
* May first need to do if added a new flag or dependency:
* :> stack clean
*
* Also
* ghc-mod:
*     :> stack install ghc-mod
* cabal-install:
*     :> stack install cabal-install
*
* Vimproc (Haskell for Vim):
* If encounter an .so DLL error => inside Vim run 'VimProcInstall'


* Installing Powerlevel9k
* :> git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
* :> vim .zshrc
* {
*     ZSH_THEME="powerlevel9k/powerlevel9k"
* }
*
* Installing Zsh-Syntax-highlighting (https://github.com/zsh-users/zsh-syntax-highlighting)
* :> git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
* In .zshrc add to plugins: zsh-syntax-highlighting
*
* Installing Zsh-autosuggestions (https://github.com/zsh-users/zsh-autosuggestions)
* :> git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
* In .zshrc add to plugins: zsh-autosuggestions


Bumblebee
Check drivers in use:
:> lspci -k | grep -A 2 -E "(VGA|3D)"

# [pac] nvidia
# [pac] bumblebee
:> gpasswd -a user bumblebee
:> sudo systemctl enable bumblebeed.service
* For power management:
# [pac] bbswitch
* Reboot!!!

* Possibly a better bridge
* (Note: currently has a bug because of mesa. Segfaults)
* # [pac] primus
* To use:
* :> optirun -b primus glxgears
* OR separately
* :> primusrun glxgears
* Or, set Bridge=primus in /etc/bumblebee/bumblebee.conf and you will not have to specify it on the command line.

To fix not working after boot from suspend:
/etc/bumblebee/bumblebee.conf:
{
    [driver-nvidia]
    PMMethod=bbswitch

    # ...

    [driver-nouveau]
    PMMethod=bbswitch
}

* Test that everything is successful:
# [pac] mesa-demos
* :> optirun glxgears -info
* OR
* :> optirun glxspheres64

* Check if the discrete GPU is ON/OFF.
* Also, rewrite this variable in order to manually do this (possibly no need for manual intervention)
* :> cat /proc/acpi/bbswitch

* Check how many apps are currently usaing Bumblebee:
* :> optirun --status

* Open nvidia-settings menu
* :> optirun -b none nvidia-settings -c :8
* (First install:)
* # [pac] nvidia-settings


* -----------------------------------------------------------------------------
* ---------------- Pacman
* -----------------------------------------------------------------------------

* # [pac] os-prober
* Needed for UEFI??

# [pac] libreoffice-still
* Libreoffice launch agruments
* --version       Displays the version information.
* --writer        Starts with an empty Writer document.
* --calc          Starts with an empty Calc document.
* --draw          Starts with an empty Draw document.
* --impress       Starts with an empty Impress document.
* --math          Starts with an empty Math document.



# [pac] jdk8-openjdk
* Consider later versions

# [pac] htop

# [pac] tlp
* :> sudo systemctl enable tlp.service tlp-sleep.service
* :> sudo systemctl mask systemd-rfkill.service systemd-rfkill.socket

# [pac] tmux

# [pac] zip

* SSH
# [pac] openssh
* :> sudo systemctl enable sshd.service

# [pac] unzip

# [pac] python-pip

# [pac] tk
* Becomes needed at some stage

# [pac] unrar

# [pac] p7zip
* .7z archive

# [pac] vlc
* Requires qt4 for gui

# [pac] qt4
* Required for gui in vlc

# [pac] ntfs-3g
* Has "advanced ntfs"

# [pac] krita

# [pac] net-tools
* For ifconfig

# [pac] pinta

# [pac] glade
* GTK gui builder

* Bluetooth
* # [pac] bluez bluez-utils pulseaudio-bluetooth blueman
* :> sudo systemctl enable bluetooth.service
* To make it work, pulseaudio must be restarted, so reboot or do this:
* :> killall pulseaudio
* Make sure you are in the "lp" group
* To use, run:
* :> blueman-manager
* May need:
* :> instp dbus-python

# [pac] wget

# [pac] youtube-dl
* :> youtube-dl -f 'bestvideo[height<=?720]+bestaudio/best[height<=?720]' <URL>
* For playlists (1-based indexing)
* :> youtube-dl -f 'bestvideo[height<=?720]+bestaudio/best[height<=?720]' --playlist-start 17 --playlist-end 30 <URL>

# [pac] cronie
* Enable: cronie.service

# [pac] mpv
* ~/.config/mpv/input.conf
* ~/.config/mpv/mpv.conf
* ~/.config/mpv/lua-settings/osc.conf

# [pac] newsboat
* ~/.newsboat/urls
* ~/.newsboat/config

# [pac] nasm
* For Assembly.

# [pac] cmus
* Alternative backup music player.

# [pac] easytag
* Change metadata of audio (music) files.

# [pac] gtypist

# [pac] rsync

# [aur] bombermaaan
* game

# [pac] w3m

# [pac] ttf-croscore
* Chrome OS fonts

# [pac] screenfetch
* Pring information about system into the terminal with logo

# [pac] nomacs
* Image viewer

# [pac] sxiv
* Image viewer
* Read arch wiki
* Install script from https://raw.githubusercontent.com/ranger/ranger/master/examples/rifle_sxiv.sh

# [pac] feh
* ~/.fehbg

# [pac] redshift
* Ranges from 1000 25000
* Natural temperature = 6500
* :> redshift -P -O 2500
* Reset to default:
* :> redshift -x

# [pac] scrot
* Screenshots

# [pac] rxvt-unicode
* There is an option to use:
% [aur] rxvt-unicode-pixbuf
* from AUR for image preview rendering support, but it turns out to be
* somewhat slow (~0.5s), so stick with w3m for that job.
* Extension for resizing fonts from AUR:
% [aur] urxvt-resize-font-git

# [pac] acpi
* Check battery status in console.
* :> acpi -i

# [pac] ranger
* To copy the default config:
* :> ranger --copy-config=all

# [pac] nnn
# [aur] vidir


* # [pac] mupdf

# [pac] zathura zathura-pdf-mupdf zathura-djvu

# [pac] perl-file-mimeinfo
* Find out mime type:
* :> mimetype <file>
* Set default:
* :> mimeopen -d <file>
* Open with default:
* :> mimeopen -n <file>

# [pac] evince-no-gnome

# [pac] djview

# [pac] alsa-utils
# [pac] pulseaudio
# [pac] ncmpcpp
# [pac] mpc
# [pac] mpd
* Once installed, update database by pressing 'u' inside ncmpcpp
* Add to .xinitrc:
* :> [ ! -s ~/.config/mpd/pid ] && mpd

# [pac] qbittorrent

# [pac] xclip
* Universal copy-paste buffer.
* Possible fix if xclip stops working, complaining about a missing DISPLAY:
* Remove(backup) the .Xauthority file at home. At the next start a new one(fixed?)
* will be generated. And at the one more consequent start everything will work.

# [pac] texlive-most
# [pac] texlive-lang
# [pac] texmaker
* Latex
? [aur] wiki2beamer

# [pac] img2pdf

# [pac] dosfstools
* Additional format types for mkfs: VFAT, MSDOS
# [pac] ntfsprogs
* Additional format types for mkfs: NTFS

* -----------------------------------------------------------------------------

? [pac] cmatrix

? [pac] sourcetrail
* Visualizes C++ codebase

? [pac] nmap
* :> sudo nmap -sn 192.168.1.0/24

? [pac] sl
* Steam Locomotive

? [pac] gcc-ada

? [pac] mono
* C# development

? [pac] openmpi

? [pac] tree

? [pac] xorg-xset
* Manual keyboard rate and delay changing
* :> xset r rate 200 40

? [pac] wine
* For .NET apps:
? [pac] wine-mono
* For IE:
? [pac] wine_gecko

? [pac] rofi
* Instead of dmenu

? [pac] arduino
? [pac] arduino-avr-core
* load the cdc_acm module.
* add self to groups:
* :> gpasswd -a $USER uucp
* :> gpasswd -a $USER lock

* -----------------------------------------------------------------------------

% [pac] mirage

% [pac] apvlv
* Vim-like. Investigate

* -----------------------------------------------------------------------------
* ---------------- AUR
* -----------------------------------------------------------------------------

# [aur] downgrader

# [aur] slack-desktop

# [aur] rar

# [aur] tusk
* Evernote web client

# [aur] ttf-wps-fonts

# [aur] ttf-ms-fonts
* Fonts: Times New Romans and co.

# [aur] imagemagick-full
* Convert images, PDFs, etc.

# [aur] wps-office
* Launch:
* wps === word
* wpp === presentations
* et === spreadsheet

* -----------------------------------------------------------------------------

? [aur] edb-debugger
* Disassembler and debugger, similar to OllyDbg

? [aur] st

? [aur] bash-pipes
* :> pipes

? [aur] bombermaaan
* game

? [aur] nsnake

? [aur] flashplayer-standalone
* Play Flash player *.swf files

? [aur] vmware-workstation
* Additional setup required (read arch wiki) (services and modprobe).
* To fix networking (may require preceding reboot):
* :> sudo vmware-networks --start

? [aur] python-pywal
* Draw colors from background image

* -----------------------------------------------------------------------------
* ---------------- Stack
* -----------------------------------------------------------------------------

* # [stack] pandoc
* :> stack install --system-ghc pandoc
* Takes a long time to complete

* -----------------------------------------------------------------------------
* ---------------- TODOs
* -----------------------------------------------------------------------------
* Fonts:
* Install powerline fonts from https://github.com/powerline/fonts
* :> trizen -S ttf-consolas-powerline
* For special glyphs:
* :> pacman -S ttf-freefont
